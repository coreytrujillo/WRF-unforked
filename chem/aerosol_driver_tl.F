!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.6 (r4756) - 12 Feb 2013 10:43
!
!  Differentiation of aerosols_driver in forward (tangent) mode (with options r8 noISIZE):
!   variations   of useful results: chem
!   with respect to varying inputs: chem
!   RW status of diff variables: chem:in-out
SUBROUTINE g_aerosols_driver(id, curr_secs, ktau, dtstep, ktauc, &
&  config_flags, dtstepc, dx, alt, t_phy, moist, aerwrf, p8w, t8w, p_phy&
&  , chem, g_chem, rho_phy, dz8w, rh, z, z_at_w, pbl_h, cldfra, &
&  cldfra_mp_all, vbs_nbin, h2oaj, h2oai, nu3, ac3, cor3, asulf, ahno3, &
&  anh3, cvaro1, cvaro2, cvalk1, cvole1, cvapi1, cvapi2, cvlim1, cvlim2, &
&  vcsulf_old, vdrog3, vdrog3_vbs, brch_ratio, dgnum, dgnumwet, &
&  wetdens_ap, del_h2so4_gasprod, dvmrdt_sv13d, dvmrcwdt_sv13d, &
&  is_cammgmp_used, ids, ide, jds, jde, kds, kde, ims, ime, jms, jme, kms&
&  , kme, its, ite, jts, jte, kts, kte)
  USE module_configure
  USE module_state_description
  USE module_model_constants
  USE modal_aero_data, only: ntot_amode_cam_mam => ntot_amode
  USE module_cam_support, only: gas_pcnst => gas_pcnst_modal_aero, &
       gas_pcnst_pos => gas_pcnst_modal_aero_pos
  USE g_module_gocart_aerosols
  USE module_data_sorgam
  USE module_data_soa_vbs, only: ldrog_vbs
  IMPLICIT NONE
  TYPE(GRID_CONFIG_REC_TYPE), INTENT(IN) :: config_flags
  LOGICAL, INTENT(IN) :: is_cammgmp_used
  INTEGER, INTENT(IN) :: ids, ide, jds, jde, kds, kde, ims, ime, jms, &
&  jme, kms, kme, its, ite, jts, jte, kts, kte, id, ktau, ktauc, vbs_nbin&
&  (1)
  REAL(kind=8), INTENT(IN) :: curr_secs
  REAL, INTENT(IN) :: dtstep, dtstepc, dx
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme, num_moist), INTENT(IN) :: &
&  moist
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme, num_chem), INTENT(INOUT) ::&
&  chem
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme, num_chem), INTENT(INOUT) ::&
&  g_chem
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), INTENT(INOUT) :: h2oaj, &
&  h2oai, nu3, ac3, cor3, asulf, ahno3, anh3, cvaro1, cvaro2, cvalk1, &
&  cvole1, cvapi1, cvapi2, cvlim1, cvlim2, brch_ratio
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme, ntot_amode_cam_mam), &
&  INTENT(INOUT) :: dgnum, dgnumwet, wetdens_ap
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), INTENT(IN) :: &
&  del_h2so4_gasprod
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), INTENT(INOUT) :: aerwrf
  REAL, DIMENSION(ims:ime, kms:kme - 0, jms:jme, ldrog), INTENT(IN) :: &
&  vdrog3
  REAL, DIMENSION(ims:ime, kms:kme - 0, jms:jme, ldrog_vbs), INTENT(IN) &
&  :: vdrog3_vbs
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), INTENT(IN) :: alt, t_phy, &
&  p_phy, dz8w, rh, z, t8w, p8w, z_at_w, rho_phy, cldfra, cldfra_mp_all
  REAL, DIMENSION(ims:ime, jms:jme), INTENT(IN) :: pbl_h
  REAL, DIMENSION(ims:ime, kms:kme - 0, jms:jme), INTENT(INOUT) :: &
&  vcsulf_old
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme, gas_pcnst_pos), INTENT(IN) &
&  :: dvmrdt_sv13d, dvmrcwdt_sv13d
  INTEGER :: ii, jj, kk
  SELECT CASE  (config_flags%chem_opt) 
  CASE (GOCART_SIMPLE, GOCARTRACM_KPP, GOCARTRADM2, &
&  MOZCART_KPP, GOCART_BCCO, GOCART_BC) 
    CALL WRF_DEBUG(15, 'g_aerosols_driver: calling g_gocart_aerosols_driver')
    CALL G_GOCART_AEROSOLS_DRIVER(ktauc, dtstepc, config_flags, t_phy, &
&                            moist, chem, g_chem, rho_phy, dz8w, p8w, dx&
&                            , g, ids, ide, jds, jde, kds, kde, ims, ime&
&                            , jms, jme, kms, kme, its, ite, jts, jte, &
&                            kts, kte)
  END SELECT
END SUBROUTINE g_aerosols_driver
!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.6 (r4756) - 12 Feb 2013 10:43
!
!  Differentiation of sum_pm_driver in forward (tangent) mode (with options r8 noISIZE):
!   variations   of useful results: pm10 pm2_5_dry_ec pm2_5_dry
!   with respect to varying inputs: pm10 pm2_5_dry_ec alt chem
!                pm2_5_dry
!   RW status of diff variables: pm10:in-out pm2_5_dry_ec:in-out
!                alt:in chem:in pm2_5_dry:in-out
SUBROUTINE g_sum_pm_driver(config_flags, alt, g_alt, chem, g_chem, h2oaj&
&  , h2oai, pm2_5_dry, g_pm2_5_dry, pm2_5_water, pm2_5_dry_ec, &
&  g_pm2_5_dry_ec, pm10, g_pm10, hoa_a01, hoa_a02, hoa_a03, hoa_a04, &
&  bboa_a01, bboa_a02, bboa_a03, bboa_a04, soa_a01, soa_a02, soa_a03, &
&  soa_a04, bbsoa_a01, bbsoa_a02, bbsoa_a03, bbsoa_a04, hsoa_a01, &
&  hsoa_a02, hsoa_a03, hsoa_a04, biog_a01, biog_a02, biog_a03, biog_a04, &
&  asmpsoa_a01, asmpsoa_a02, asmpsoa_a03, asmpsoa_a04, arosoa_a01, &
&  arosoa_a02, arosoa_a03, arosoa_a04, totoa_a01, totoa_a02, totoa_a03, &
&  totoa_a04, hsoa_c, hsoa_o, bbsoa_c, bbsoa_o, biog_v1, biog_v2, biog_v3&
&  , biog_v4, ant_v1, ant_v2, ant_v3, ant_v4, smpa_v1, smpbb_v1, ids, ide&
&  , jds, jde, kds, kde, ims, ime, jms, jme, kms, kme, its, ite, jts, jte&
&  , kts, kte)
  USE module_configure
  USE g_module_gocart_aerosols, only: g_sum_pm_gocart
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: ids, ide, jds, jde, kds, kde, ims, ime, jms, &
&  jme, kms, kme, its, ite, jts, jte, kts, kte
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme, num_chem), INTENT(IN) :: &
&  chem
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme, num_chem), INTENT(IN) :: &
&  g_chem
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), INTENT(IN) :: alt
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), INTENT(IN) :: g_alt
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), OPTIONAL, INTENT(IN) :: &
&  h2oaj, h2oai
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), OPTIONAL, INTENT(OUT) :: &
&  pm2_5_dry, pm2_5_water, pm2_5_dry_ec, pm10, hoa_a01, hoa_a02, hoa_a03&
&  , hoa_a04, bboa_a01, bboa_a02, bboa_a03, bboa_a04, soa_a01, soa_a02, &
&  soa_a03, soa_a04, bbsoa_a01, bbsoa_a02, bbsoa_a03, bbsoa_a04, hsoa_a01&
&  , hsoa_a02, hsoa_a03, hsoa_a04, biog_a01, biog_a02, biog_a03, biog_a04&
&  , arosoa_a01, arosoa_a02, arosoa_a03, arosoa_a04, totoa_a01, totoa_a02&
&  , totoa_a03, totoa_a04, hsoa_c, hsoa_o, bbsoa_c, bbsoa_o, biog_v1, &
&  biog_v2, biog_v3, biog_v4, ant_v1, ant_v2, ant_v3, ant_v4, smpa_v1, &
&  smpbb_v1, asmpsoa_a01, asmpsoa_a02, asmpsoa_a03, asmpsoa_a04
  REAL, DIMENSION(ims:ime, kms:kme, jms:jme), OPTIONAL, INTENT(OUT) :: &
&  g_pm2_5_dry, g_pm2_5_dry_ec, g_pm10
  TYPE(GRID_CONFIG_REC_TYPE), INTENT(IN) :: config_flags
  SELECT CASE  (config_flags%chem_opt) 
  CASE (GOCART_SIMPLE, GOCARTRACM_KPP, GOCARTRADM2, &
&  MOZCART_KPP) 
    CALL WRF_DEBUG(15, 'g_sum_pm_driver: calling g_sum_pm_gocart')
    CALL G_SUM_PM_GOCART(alt, g_alt, chem, g_chem, pm2_5_dry, &
&                   g_pm2_5_dry, pm2_5_dry_ec, g_pm2_5_dry_ec, pm10, &
&                   g_pm10, ids, ide, jds, jde, kds, kde, ims, ime, jms, &
&                   jme, kms, kme, its, ite, jts, jte, kts, kte)
  END SELECT
END SUBROUTINE g_sum_pm_driver
